---
# tasks file for find-orphaned-images
- name: Include vault creds
  ansible.builtin.include_vars: "{{ vault_file }}"

- name: Install hvac
  ansible.builtin.pip:
     name: hvac
     state: present

- name: Populate variables
  set_fact:
          config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"
          git_secret: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=amelio/data/{{ git_secret_folder }}:ole-config-labenv auth_method=userpass username={{ vault_user }} password={{ vault_pass }} url={{ vault_url }}') }}"
          git: "{{ 'deploy/factory' if cluster_name == 'geonosis' else 'deploy/cn-prod' if cluster_name == 'malbus' else 'deploy/prod' }}"

- name: Create temporary folder for git cloning
  ansible.builtin.file:
          path: "{{ repo_dir }}"
          state: directory

- name: Store git pass in a temporary file
  ansible.builtin.lineinfile:
          path: "{{ git_secret_file }}"
          line: "{{ git_secret }}"
          create: true
          mode: '0600'

- name: Clone git repo                          
  ansible.builtin.git:
          repo: 'git@github.com:RedHatTraining/ole-config-labenv'
          dest: "{{ repo_dir }}"
          version: "{{ git }}"
          key_file: "{{ git_secret_file }}"
          accept_newhostkey: true

- name: print config filename
  ansible.builtin.debug: 
          msg: "{{ config_file }}"

- name: Include openstack creds
  ansible.builtin.include_vars: "{{ config_file }}"

- name: Get the list of images from OpenStack
  openstack.cloud.image_info:
  register: var1

- name: Store image names in a temporary file
  ansible.builtin.lineinfile:
        path: "{{ cloud_image_list }}"
        line: "{{ var1.images | map(attribute='name')| join('\n') }}"
        insertafter: EOF
        create: true

- name: Get image names from heat template file and store it in a file
  ansible.builtin.shell: |
     # Image files
     awk '/image:/ {print $2}' {{ git_heatdir }}/*.yaml > {{ heat_template_image_list }}
     # Images files in a Jinja2 template (SSH images)
     awk -F"'" "/image_name=/ {print \$2}" {{ git_heatdir }}/*.yaml >> {{ heat_template_image_list }}


- name: Exclude specific images from Openstack image list
  ansible.builtin.shell: egrep -v '{{ exclusion_list }}' {{ cloud_image_list }} > {{ cloud_image_list_final }}

- name: Create folder for final list
  ansible.builtin.file:
     name: "{{ final_folder }}"
     state: directory

- name: Final list
  ansible.builtin.shell: |
     awk 'FNR==NR{a[$1];next}!($1 in a){print}' {{ heat_template_image_list }} {{ cloud_image_list_final }} | egrep -v '{{ exclusion_list }}' > {{ final_list }}
     wc -l {{ final_list }} | awk '{print $1}'
  register: fl

- name: Status
  ansible.builtin.debug: 
      msg:
        "- ---------------------------------------------------------------------------
        - Total Number of orphaned images in {{ cluster_name }} - {{ fl.stdout }}
        - Path for the detailed list is in tower server: /var/content/find-orphaned-images-list/{{ cluster_name }}
        - ---------------------------------------------------------------------------"

- name: Remove temporary files
  ansible.builtin.file:
      path: "{{ item }}"
      state: absent
  tags: del
  loop:
    - "{{ git_secret_file }}"
    - "{{ cloud_image_list }}"
    - "{{ heat_template_image_list }}"
    - "{{ cloud_image_list_final }}"
    - "{{ repo_dir }}"
